{"version":3,"sources":["context/contextReducer.js","context/context.js","constants/categories.js","useTransactions.js","components/details/styles.js","components/details/Details.jsx","components/main/styles.js","utils/formatDate.js","components/main/form/styles.js","components/snackbar/styles.js","components/snackbar/Snackbar.jsx","components/main/form/Form.jsx","components/main/list/styles.js","components/main/list/List.jsx","components/InfoCard.jsx","components/main/Main.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","transaction","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transactionsPerType","useContext","total","accumulator","currentValue","categories","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","makeStyles","income","borderBottom","expense","cardHeader","textAlign","padding","content","d","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","positive","negative","card","formatDate","date","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyContent","marginBottom","button","marginTop","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","entity","charAt","slice","toLowerCase","iC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","word","FormControl","fullWidth","InputLabel","Select","onChange","e","target","MenuItem","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","isIncome","Math","round","random","InfoCard","style","fontWeight","Main","useStales","size","lineHeight","Divider","desktop","breakpoints","up","mobile","down","main","last","paddingBottom","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","ReactDom","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.58f91fe8.chunk.js","sourcesContent":["const contextReducer = (state, action) => {\n    let transactions;\n\n    switch (action.type) {\n\n        case 'DELETE_TRANSACTION':\n            transactions = state.filter((transaction) => transaction.id !== action.payload);\n\n            localStorage.setItem('transactions', JSON.stringify(transactions));\n\n            return transactions;\n\n        case 'ADD_TRANSACTION':\n            transactions = [action.payload, ...state];\n\n            localStorage.setItem('transactions', JSON.stringify(transactions));\n\n            return transactions;\n\n        default:\n            return state;\n    }\n};\n\nexport default contextReducer;","import React, {useReducer, createContext} from \"react\";\n\nimport contextReducer from \"./contextReducer\";\n\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\n\nexport const ExpenseTrackerContext = createContext(initialState);\n\nexport const Provider = ({children}) => {\n    const [transactions, dispatch] = useReducer(contextReducer, initialState);\n\n    const deleteTransaction = (id) => {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    const addTransaction = (transaction) => {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        });\n    }\n\n    const balance = transactions.reduce((acc, currVal) => {\n        return (currVal.type === 'Expense' ? acc - currVal.amount : acc + currVal.amount)\n    }, 0)\n\n    return (\n        <ExpenseTrackerContext.Provider value={{\n            deleteTransaction,\n            addTransaction,\n            transactions,\n            balance\n        }}>\n            {children}\n        </ExpenseTrackerContext.Provider>\n    )\n}","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\n\nexport const incomeCategories = [\n    { type: 'Business', amount: 0, color: incomeColors[0] },\n    { type: 'Investments', amount: 0, color: incomeColors[1] },\n    { type: 'Extra income', amount: 0, color: incomeColors[2] },\n    { type: 'Deposits', amount: 0, color: incomeColors[3] },\n    { type: 'Lottery', amount: 0, color: incomeColors[4] },\n    { type: 'Gifts', amount: 0, color: incomeColors[5] },\n    { type: 'Salary', amount: 0, color: incomeColors[6] },\n    { type: 'Savings', amount: 0, color: incomeColors[7] },\n    { type: 'Rental income', amount: 0, color: incomeColors[8] },\n];\n\nexport const expenseCategories = [\n    { type: 'Bills', amount: 0, color: expenseColors[0] },\n    { type: 'Car', amount: 0, color: expenseColors[1] },\n    { type: 'Clothes', amount: 0, color: expenseColors[2] },\n    { type: 'Travel', amount: 0, color: expenseColors[3] },\n    { type: 'Food', amount: 0, color: expenseColors[4] },\n    { type: 'Shopping', amount: 0, color: expenseColors[5] },\n    { type: 'House', amount: 0, color: expenseColors[6] },\n    { type: 'Entertainment', amount: 0, color: expenseColors[7] },\n    { type: 'Phone', amount: 0, color: expenseColors[8] },\n    { type: 'Pets', amount: 0, color: expenseColors[9] },\n    { type: 'Other', amount: 0, color: expenseColors[10] },\n];\n\nexport const resetCategories = () => {\n    incomeCategories.forEach((c) => c.amount = 0);\n    expenseCategories.forEach((c) => c.amount = 0);\n};","import {useContext} from \"react\";\nimport {ExpenseTrackerContext} from \"./context/context\";\n\nimport {incomeCategories, expenseCategories, resetCategories} from \"./constants/categories\";\n\nconst useTransactions = (title) => {\n    resetCategories();\n    const {transactions} = useContext(ExpenseTrackerContext);\n    const transactionsPerType = transactions.filter((transaction) => transaction.type === title);\n    const total = transactionsPerType.reduce((accumulator, currentValue) => accumulator += currentValue.amount, 0);\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\n\n    transactionsPerType.forEach((transaction) => {\n        const category = categories.find((category) => category.type === transaction.category)\n\n        if (category) category.amount += transaction.amount;\n    });\n\n    const filteredCategories = categories.filter((category) => category.amount > 0);\n\n    const chartData = {\n        datasets: [{\n            data: filteredCategories.map((category) => category.amount),\n            backgroundColor: filteredCategories.map((category) => category.color),\n        }],\n        labels: filteredCategories.map((category) => category.type)\n    }\n\n    return {total, chartData}\n}\n\nexport default useTransactions;","import {makeStyles} from \"@material-ui/core\";\n\nexport default makeStyles(() => ({\n    income: {\n        borderBottom: \"15px solid rgba(76, 175, 80, .5)\"\n    },\n    expense: {\n        borderBottom: \"15px solid rgba(244, 67, 54, .5)\"\n    },\n    cardHeader: {\n        textAlign: \"center\",\n        padding: \"5px\"\n    },\n    total: {\n        textAlign: \"center\"\n    },\n    content: {\n        padding: \"5px !important\"\n    },\n    d: {\n        padding: \"10px !important\",\n    }\n}));","import React from \"react\";\nimport {Card, CardHeader, CardContent, Typography} from \"@material-ui/core\";\nimport useTransactions from \"../../useTransactions\";\nimport {Doughnut} from \"react-chartjs-2\";\n\nimport useStyles from \"./styles\";\n\nconst Details = ({title}) => {\n    const classes = useStyles();\n    const {total, chartData} = useTransactions(title);\n\n    return (\n        <Card className={title === \"Income\" ? classes.income : classes.expense}>\n\n            <CardHeader className={classes.cardHeader} title={title} />\n\n            <CardContent className={classes.content}>\n                <Typography className={classes.total} variant=\"h5\">$ {total}</Typography>\n                <Doughnut className={classes.d} type=\"doughnut\" data={chartData}/>\n            </CardContent>\n\n        </Card>\n    );\n};\n\nexport default Details;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\",\n    },\n    expand: {\n        transform: \"rotate(0deg)\",\n        marginLeft: \"auto\",\n        transition: theme.transitions.create(\"transform\", {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: \"rotate(180deg)\",\n    },\n    cartContent: {\n        paddingTop: 0,\n    },\n    divider: {\n        margin: \"20px 0\",\n    },\n    title: {\n        textAlign: 'center',\n        padding: '5px !important'\n    },\n    positive: {\n        color: 'green',\n        margin: '0'\n    },\n    negative: {\n        color: 'red',\n        margin: '0'\n    },\n    card: {\n        borderBottom: \"15px solid cyan\",\n    },\n}));","const formatDate = (date) => {\n    const d = new Date(date);\n    let month = `${d.getMonth() + 1}`;\n    let day = `${d.getDate()}`;\n    const year = d.getFullYear();\n\n    if (month.length <2) {\n        month = `0${month}`\n    }\n    if (day.length <2) {\n        day = `0${day}`\n    }\n\n    return [year, month, day].join('-');\n}\n\nexport default formatDate;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles(() => ({\n    radioGroup: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: \"-10px\",\n    },\n    button: {\n        marginTop: \"20px\",\n    },\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));","import React from \"react\";\nimport {Snackbar} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\"\n\nimport useStyles from \"./styles\";\n\nconst CustomizedSnackbar = ({open, setOpen}) => {\n    const classes = useStyles();\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickAway') return;\n        setOpen(false);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                anchorOrigin={{vertical: 'top', horizontal: 'left'}}\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <MuiAlert onClose={handleClose} severity=\"success\" elevation={6} variant=\"filled\">\n                    Transaction successfully created!\n                </MuiAlert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default CustomizedSnackbar;","import React, {useState, useContext, useEffect} from \"react\";\nimport {TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem} from \"@material-ui/core\";\nimport {ExpenseTrackerContext} from \"../../../context/context\";\nimport {v4 as uuidv4} from \"uuid\";\nimport formatDate from \"../../../utils/formatDate\";\nimport {useSpeechContext} from \"@speechly/react-client\";\n\nimport useStyles from \"./styles\";\nimport {incomeCategories, expenseCategories} from \"../../../constants/categories\";\nimport CustomizedSnackbar from \"../../snackbar/Snackbar\";\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n}\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const {addTransaction} = useContext(ExpenseTrackerContext);\n    const {segment} = useSpeechContext();\n    const [open, setOpen] = useState(false);\n\n    const createTransaction = () => {\n        if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        const transaction = {...formData, amount: Number(formData.amount), id: uuidv4()};\n        if (formData.amount && formData.category) {\n            setOpen(true);\n            addTransaction(transaction);\n            setFormData(initialState);\n        }\n    }\n\n    useEffect(() => {\n        if (segment) {\n            if (segment.intent.intent === 'add_expense') {\n                setFormData({...formData, type: 'Expense'})\n            } else if (segment.intent.intent === 'add_income') {\n                setFormData({...formData, type: 'Income'})\n            } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n                return createTransaction();\n            }   else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n                return setFormData(initialState)\n            }\n            segment.entities.forEach((entity) => {\n                const category = `${entity.value.charAt(0)}${entity.value.slice(1).toLowerCase()}`\n                switch (entity.type) {\n                    case 'amount':\n                        setFormData({...formData, amount: entity.value});\n                        break;\n                    case 'category':\n                        if (incomeCategories.map((iC) => iC.type.includes(category))) {\n                            setFormData({...formData, type: 'Income', category})\n                        } else if (expenseCategories.map((iC) => iC.type.includes(category))) {\n                            setFormData({...formData, type: 'Expense', category})\n                        }\n                        break;\n                    case 'date':\n                        setFormData({...formData, date: entity.value})\n                        break;\n                    default:\n                        break;\n                }\n            })\n            if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n                createTransaction();\n            }\n        }\n    }, [segment]);\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing={2}>\n\n            <CustomizedSnackbar open={open} setOpen={setOpen} />\n\n            <Grid item xs={12}>\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n                    {segment && segment.words.map((word) => word.value).join(\" \")}\n                </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n\n                    <InputLabel>Type</InputLabel>\n\n                    <Select value={formData.type} onChange={(e) => setFormData({...formData, type: e.target.value})}>\n                        <MenuItem value=\"Income\">Income</MenuItem>\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\n                    </Select>\n\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n\n                    <InputLabel>Category</InputLabel>\n\n                    <Select value={formData.category} onChange={(e) => setFormData({...formData, category: e.target.value})}>\n                        {selectedCategories.map((category) => <MenuItem key={category.type} value={category.type}>{category.type}</MenuItem>)}\n                    </Select>\n\n                </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type=\"number\"  label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({...formData, amount: e.target.value < 0 ? (e.target.value = 1) : e.target.value})} fullWidth/>\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField type=\"date\" label=\"Date\" value={formData.date} onChange={(e) => setFormData({...formData, date: formatDate(e.target.value)})} fullWidth/>\n            </Grid>\n\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" onClick={createTransaction} fullWidth>Create</Button>\n\n        </Grid>\n    );\n};\n\nexport default Form;","import { makeStyles } from \"@material-ui/core/styles\";\nimport { red, green } from \"@material-ui/core/colors\";\n\nexport default makeStyles((theme) => ({\n    avatarIncome: {\n        color: \"#fff\",\n        backgroundColor: green[500],\n    },\n    avatarExpense: {\n        color: theme.palette.getContrastText(red[500]),\n        backgroundColor: red[500],\n    },\n    list: {\n        maxHeight: \"130px\",\n        overflow: \"auto\",\n    },\n}));","import React, {useContext} from \"react\";\nimport {\n    List as MUIList, ListItem, ListItemAvatar,\n    ListItemText, Avatar, ListItemSecondaryAction,\n    IconButton, Slide\n} from \"@material-ui/core\";\nimport {Delete, MoneyOff} from \"@material-ui/icons\";\nimport {ExpenseTrackerContext} from \"../../../context/context\";\n\nimport useStyles from \"./styles\";\n\nconst List = () => {\n    const classes = useStyles();\n    const {deleteTransaction, transactions} = useContext(ExpenseTrackerContext);\n\n    return (\n        <MUIList dense={false} className={classes.list}>\n\n            {transactions.map((transaction) => (\n                <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\n                    <ListItem>\n\n                        <ListItemAvatar>\n                            <Avatar className={transaction.type === \"Income\" ? classes.avatarIncome : classes.avatarExpense}>\n                                <MoneyOff />\n                            </Avatar>\n                        </ListItemAvatar>\n\n                        <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - $${transaction.date}`}/>\n\n                        <ListItemSecondaryAction>\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\n                                <Delete />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n\n                    </ListItem>\n                </Slide>\n            ))}\n\n        </MUIList>\n    );\n};\n\nexport default List;","import React from 'react';\n\nconst isIncome = Math.round(Math.random());\n\nconst InfoCard = () => {\n    return (\n        <div style={{ textAlign: 'center', padding: '0 10%', fontWeight: '100'}}>\n            Try saying: <br />\n            Add {isIncome ? 'Income ' : 'Expense '}\n            for {isIncome ? '$100 ' : '$50 '}\n            in Category {isIncome ? 'Salary ' : 'Travel '}\n            for {isIncome ? 'Monday ' : 'Thursday '}\n        </div>\n    );\n};\n\nexport default InfoCard;","import React, {useContext} from \"react\";\nimport {Card, CardHeader, CardContent, Typography, Grid, Divider} from \"@material-ui/core\";\n\nimport useStales from \"./styles\";\nimport {ExpenseTrackerContext} from \"../../context/context\";\nimport Form from \"./form/Form\";\nimport List from \"./list/List\";\nimport InfoCard from \"../InfoCard\";\nimport {PushToTalkButton} from \"@speechly/react-ui\";\n\nconst Main = () => {\n    const classes = useStales();\n    const {balance} = useContext(ExpenseTrackerContext);\n\n    return (\n        <Card className={classes.card}>\n\n            <Grid container>\n                <Grid  item xs={12}>\n                    <CardHeader className={classes.title} title=\"Expense Tracker\"/>\n                </Grid>\n                <Grid item xs={5}/>\n                <Grid item xs={1}>\n                    <PushToTalkButton size={'3rem'}/>\n                </Grid>\n            </Grid>\n\n\n            <CardContent>\n                <Typography align=\"center\" variant=\"h5\">Total Balance:\n                    <p className={ balance > 0 ? classes.positive : classes.negative } >{balance} $</p>\n                </Typography>\n                <Typography variant=\"subtitle1\" style={{ lineHeight: \"1.8em\", marginTop: \"10px\" }}>\n                    <InfoCard />\n                </Typography>\n                <Divider className={classes.divider} />\n                <Form />\n            </CardContent>\n\n            <CardContent className={classes.cartContent}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <List />\n                    </Grid>\n                </Grid>\n            </CardContent>\n\n        </Card>\n    );\n};\n\nexport default Main;","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n    desktop: {\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    mobile: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    main: {\n        [theme.breakpoints.up(\"sm\")]: {\n            marginBottom: \"5%\",\n        },\n        marginBottom: '100px',\n    },\n    last: {\n        [theme.breakpoints.down(\"sm\")]: {\n            marginBottom: theme.spacing(3),\n            paddingBottom: \"200px\",\n        },\n    },\n    grid: {\n        \"& > *\": {\n            margin: theme.spacing(3),\n        },\n    },\n}));","import React, {useEffect, useRef} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport {SpeechState, useSpeechContext} from \"@speechly/react-client\";\n\nimport Details from \"./components/details/Details\";\nimport Main from \"./components/main/Main\";\nimport useStyles from \"./styles\";\n\nconst App = () => {\n    const classes = useStyles();\n    const {speechState} = useSpeechContext();\n    const main = useRef(null);\n\n    const executeScroll = () => main.current.scrollIntoView();\n\n    useEffect(() => {\n        if (speechState === SpeechState.Recording) {\n            executeScroll();\n        }\n    }, [speechState]);\n\n    return (\n        <div>\n            <Grid className={classes.grid} container spacing={0} alignItems={\"center\"} justify={\"center\"} style={{ height: '100vh'}}>\n\n                <Grid item xs={12} sm={3} className={classes.mobile}>\n                    <Details title=\"Income\" />\n                </Grid>\n\n                <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n                    <Main />\n                </Grid>\n\n                <Grid item xs={12} sm={3} className={classes.desktop}>\n                    <Details title=\"Income\" />\n                </Grid>\n\n                <Grid item xs={12} sm={3} className={classes.last}>\n                    <Details title=\"Expense\"/>\n                </Grid>\n            </Grid>\n\n        </div>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport {Provider} from \"./context/context\";\nimport {SpeechProvider} from \"@speechly/react-client\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDom.render(\n    <SpeechProvider appId=\"341d0fc9-010d-420f-a6b9-28418d43344c\" language=\"en-US\">\n        <Provider>\n            <App />\n        </Provider>\n    </SpeechProvider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}